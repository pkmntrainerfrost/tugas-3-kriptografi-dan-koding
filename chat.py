# Form implementation generated from reading ui file 'simulator.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import rsa
import os

def message_box(self,title,data):
    message = QtWidgets.QMessageBox(self)
    message.setWindowTitle()

def update_list(self,listWidget,data,encrypted):
    x = QtWidgets.QListWidgetItem()
    x.setText(f"[{self.message_id}] {data}")
    if encrypted:
        x.setToolTip("Klik untuk lakukan dekripsi")
    listWidget.addItem(x)

def new_message(self, data, sender, message_type, public_key,length):
    self.messages += [{"id" : self.message_id, "sender" : sender, "type" : message_type , "data" : data, "public_key" : public_key, "length" : length}]
    self.message_id += 1

def new_file(self, name, contents):
    self.files += [{"id" : self.file_id, "name" : name, "contents" : contents}]
    self.file_id += 1

class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        self.message_id = 0
        self.messages = []
        self.files = []
        self.file_id = 0
        self.mainwindow = MainWindow
        self.mainwindow.setObjectName("MainWindow")
        self.mainwindow.resize(800, 615)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(10, 10, 381, 41))
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.pushButton = QtWidgets.QPushButton(parent=self.frame)
        self.pushButton.setGeometry(QtCore.QRect(300, 10, 75, 24))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(parent=self.frame)
        self.pushButton_2.setGeometry(QtCore.QRect(220, 10, 75, 24))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.alice_generate_key)
        self.lineEdit = QtWidgets.QLineEdit(parent=self.frame)
        self.lineEdit.setGeometry(QtCore.QRect(10, 10, 201, 21))
        self.lineEdit.setObjectName("lineEdit")
        self.frame_2 = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(410, 10, 381, 41))
        self.frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_2.setObjectName("frame_2")
        self.pushButton_3 = QtWidgets.QPushButton(parent=self.frame_2)
        self.pushButton_3.setGeometry(QtCore.QRect(220, 10, 75, 24))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.bob_generate_key)
        self.pushButton_4 = QtWidgets.QPushButton(parent=self.frame_2)
        self.pushButton_4.setGeometry(QtCore.QRect(300, 10, 75, 24))
        self.pushButton_4.setObjectName("pushButton_4")
        self.lineEdit_2 = QtWidgets.QLineEdit(parent=self.frame_2)
        self.lineEdit_2.setGeometry(QtCore.QRect(10, 10, 201, 21))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.frame_3 = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame_3.setGeometry(QtCore.QRect(10, 60, 381, 371))
        self.frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_3.setObjectName("frame_3")
        self.listWidget = QtWidgets.QListWidget(parent=self.frame_3)
        self.listWidget.setGeometry(QtCore.QRect(10, 10, 361, 351))
        self.listWidget.setObjectName("listWidget")
        self.listWidget.itemClicked.connect(self.alice_decrypt)
        self.frame_4 = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame_4.setGeometry(QtCore.QRect(410, 60, 381, 371))
        self.frame_4.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_4.setObjectName("frame_4")
        self.listWidget_2 = QtWidgets.QListWidget(parent=self.frame_4)
        self.listWidget_2.setGeometry(QtCore.QRect(10, 10, 361, 351))
        self.listWidget_2.setObjectName("listWidget_2")
        self.listWidget_2.itemClicked.connect(self.bob_decrypt)
        self.frame_5 = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame_5.setGeometry(QtCore.QRect(10, 440, 381, 121))
        self.frame_5.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_5.setObjectName("frame_5")
        self.textEdit = QtWidgets.QTextEdit(parent=self.frame_5)
        self.textEdit.setGeometry(QtCore.QRect(10, 10, 281, 101))
        self.textEdit.setObjectName("textEdit")
        self.pushButton_5 = QtWidgets.QPushButton(parent=self.frame_5)
        self.pushButton_5.setGeometry(QtCore.QRect(300, 10, 75, 71))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_5.clicked.connect(self.alice_send_message)
        self.pushButton_5.setDisabled(True)
        self.pushButton_6 = QtWidgets.QPushButton(parent=self.frame_5)
        self.pushButton_6.setGeometry(QtCore.QRect(300, 90, 75, 24))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_6.clicked.connect(self.alice_send_file)
        self.pushButton_6.setDisabled(True)
        self.frame_6 = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame_6.setGeometry(QtCore.QRect(410, 440, 381, 121))
        self.frame_6.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_6.setObjectName("frame_6")
        self.textEdit_2 = QtWidgets.QTextEdit(parent=self.frame_6)
        self.textEdit_2.setGeometry(QtCore.QRect(10, 10, 281, 101))
        self.textEdit_2.setObjectName("textEdit_2")
        self.pushButton_7 = QtWidgets.QPushButton(parent=self.frame_6)
        self.pushButton_7.setGeometry(QtCore.QRect(300, 10, 75, 71))
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_7.clicked.connect(self.bob_send_message)
        self.pushButton_7.setDisabled(True)
        self.pushButton_8 = QtWidgets.QPushButton(parent=self.frame_6)
        self.pushButton_8.setGeometry(QtCore.QRect(300, 90, 75, 24))
        self.pushButton_8.setObjectName("pushButton_8")
        self.pushButton_8.setDisabled(True)
        self.line = QtWidgets.QFrame(parent=self.centralwidget)
        self.line.setGeometry(QtCore.QRect(390, -20, 20, 611))
        self.line.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line.setObjectName("line")
        self.mainwindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        self.mainwindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        self.mainwindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        self.alice_keys = False
        self.bob_keys = False

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        self.mainwindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Load Key"))
        self.pushButton_2.setText(_translate("MainWindow", "New Key"))
        self.lineEdit.setText(_translate("MainWindow", "Alice"))
        self.pushButton_3.setText(_translate("MainWindow", "New Key"))
        self.pushButton_4.setText(_translate("MainWindow", "Load Key"))
        self.lineEdit_2.setText(_translate("MainWindow", "Bob"))
        self.pushButton_5.setText(_translate("MainWindow", ">"))
        self.pushButton_6.setText(_translate("MainWindow", "Send File"))
        self.pushButton_7.setText(_translate("MainWindow", ">"))
        self.pushButton_8.setText(_translate("MainWindow", "Send File"))

    def alice_send_message(self):

        nickname = self.lineEdit.text()
        rmessage = self.textEdit.toPlainText()

        length = len(rmessage)

        encrypted_message = rsa.rsaEncryptText(rmessage + "   ",self.bob_keys["public"])
        
        self.textEdit.clear()

        update_list(self,self.listWidget,f"You : {rmessage}",False)
        update_list(self,self.listWidget_2,f"{nickname} : {encrypted_message}",True)

        new_message(self,encrypted_message,0,"text",self.bob_keys["public"],length)

    def alice_send_file(self):

        nickname = self.lineEdit_2.text()

        filename = QtWidgets.QFileDialog.getOpenFileName(self.mainwindow,"Pilih file")[0]
        
        try: 
            with open(filename,"rb") as file:   

                x = file.read()
                file_bytes = list(x)

            name = filename.split("/")[-1]
            
            length = len(file_bytes)

            encrypted_message = rsa.rsaEncryptBytes(file_bytes + [0,0,0],self.bob_keys["public"])

            update_list(self,self.listWidget,f"You sent a file : {name}",False)
            update_list(self,self.listWidget_2,f"{nickname} sent a file : {name}",True)

            new_message(self,self.file_id,0,"file",self.bob_keys["public"],length)
            new_file(self,name,encrypted_message)
        except:
            pass
        
    def bob_send_message(self):
        
        nickname = self.lineEdit_2.text()
        rmessage = self.textEdit_2.toPlainText()

        length = len(rmessage)
        
        encrypted_message = rsa.rsaEncryptText(rmessage + "   ",self.alice_keys["public"])

        self.textEdit.clear()

        update_list(self,self.listWidget,f"{nickname} : {encrypted_message}", True)
        update_list(self,self.listWidget_2,f"You : {rmessage}", False)

        new_message(self,encrypted_message,1,"text",self.alice_keys["public"],length)

    def bob_send_file(self):

        nickname = self.lineEdit.text()

        filename = QtWidgets.QFileDialog.getOpenFileName(self.mainwindow,"Pilih file")[0]
        
        try: 
            with open(filename,"rb") as file:   

                x = file.read()
                file_bytes = list(x)

            name = filename.split("/")[-1]
            
            length = len(file_bytes)

            encrypted_message = rsa.rsaEncryptBytes(file_bytes + [0,0,0],self.alice_keys["public"])

            update_list(self,self.listWidget_2,f"You sent a file : {name}",False)
            update_list(self,self.listWidget,f"{nickname} sent a file : {name}",True)

            new_message(self,self.file_id,0,"file",self.alice_keys["public"],length)
            new_file(self,name,encrypted_message)
        
        except:

            pass

    def alice_generate_key(self):

        result = rsa.rsaGenerateKeyPair()

        self.alice_keys = result["key"]

        filename = rsa.rsaSaveKeyPair(self.lineEdit.text(),result)

        self.pushButton_7.setDisabled(False)
        self.pushButton_8.setDisabled(False)

        msg = QtWidgets.QMessageBox.information(self.mainwindow,f"RSA Key Generated",f"Kunci RSA baru telah dibangkitkan untuk {self.lineEdit.text()}! Kunci telah disimpan sebagai {filename}.")

    def bob_generate_key(self):

        result = rsa.rsaGenerateKeyPair()

        self.bob_keys = result["key"]

        filename = rsa.rsaSaveKeyPair(self.lineEdit_2.text(),result)

        self.pushButton_5.setDisabled(False)
        self.pushButton_6.setDisabled(False)

        msg = QtWidgets.QMessageBox.information(self.mainwindow,f"RSA Key Generated",f"Kunci RSA baru telah dibangkitkan untuk {self.lineEdit_2.text()}! Kunci telah disimpan sebagai {filename}.")

    def alice_decrypt(self,item):

        value = self.listWidget.currentRow()

        message = self.messages[value]

        if message["sender"] == 1 and item.toolTip() != "Pesan telah didekripsi":
            
            if message["public_key"] != self.alice_keys["public"]:

                msg = QtWidgets.QMessageBox.information(self.mainwindow,f"Error",f"Pesan tidak dapat didekripsi - kunci yang digunakan berbeda.")
            
            else:
                
                if message["type"] == "text":
                    item.setText(f"[{value}] {self.lineEdit_2.text()} : {rsa.rsaDecryptText(message['data'],self.alice_keys['private'])[:message['length']]}")
                    item.setToolTip("Pesan telah didekripsi")
                else:
                    message_file = self.files[message["data"]]
                    reply = QtWidgets.QMessageBox.question(self.mainwindow, 'File', 'Simpan file sebagai hasil dekripsi?')
                    if reply == QtWidgets.QMessageBox.StandardButton.Yes:
                        filename = QtWidgets.QFileDialog.getSaveFileName(self.mainwindow,"Simpan file",message_file["name"])[0]
                        if filename == "":
                            filename = message_file["name"]
                        contents = rsa.rsaDecryptBytes(message_file["contents"],self.alice_keys["private"])[:message['length']]
                        os.makedirs(os.path.dirname(filename), exist_ok=True)
                        with open(filename,"wb+") as file: 
                            file.write(contents)
                    if reply == QtWidgets.QMessageBox.StandardButton.No:
                        filename = QtWidgets.QFileDialog.getSaveFileName(self.mainwindow,"Simpan file",message_file["name"])[0]
                        if filename == "":
                            filename = message_file["name"]
                        contents = message["contents"]
                        os.makedirs(os.path.dirname(filename), exist_ok=True)
                        with open(filename,"wb+") as file: 
                            file.write(bytearray(contents,"utf-8"))


    def bob_decrypt(self,item):

        value = self.listWidget_2.currentRow()
        print(value)

        message = self.messages[value]

        if message["sender"] == 0 and item.toolTip() != "Pesan telah didekripsi":
            
            if message["public_key"] != self.bob_keys["public"]:

                msg = QtWidgets.QMessageBox.information(self.mainwindow,f"Error",f"Pesan tidak dapat didekripsi - kunci yang digunakan berbeda.")
            
            else:
                
                if message["type"] == "text":
                    print(value)
                    item.setText(f"[{value}] {self.lineEdit.text()} : {rsa.rsaDecryptText(message['data'],self.bob_keys['private'])[:message['length']]}")
                    item.setToolTip("Pesan telah didekripsi")
                else:
                    message_file = self.files[message["data"]]
                    reply = QtWidgets.QMessageBox.question(self.mainwindow, 'File', 'Simpan file sebagai hasil dekripsi?')
                    if reply == QtWidgets.QMessageBox.StandardButton.Yes:
                        filename = QtWidgets.QFileDialog.getSaveFileName(self.mainwindow,"Simpan file",message_file["name"])[0]
                        if filename == "":
                            filename = message_file["name"]
                        contents = rsa.rsaDecryptBytes(message_file["contents"],self.bob_keys["private"])[:message['length']]
                        os.makedirs(os.path.dirname(filename), exist_ok=True)
                        with open(filename,"wb+") as file: 
                            file.write(contents)
                    if reply == QtWidgets.QMessageBox.StandardButton.No:
                        filename = QtWidgets.QFileDialog.getSaveFileName(self.mainwindow,"Simpan file",message_file["name"])[0]
                        contents = message["contents"]
                        if filename == "":
                            filename = message_file["name"]
                        os.makedirs(os.path.dirname(filename), exist_ok=True)
                        with open(filename,"wb+") as file: 
                            file.write(bytearray(contents,"utf-8"))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
